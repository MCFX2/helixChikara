class MainMenuButtonClick : ZilchComponent {
  
  var JustClicked : Boolean = false;
  
  function Initialize(init : CogInitializer) {
    Zero.Connect(this.Space, Events.LeftClick, this.OnLeftClick);
  }
  
  function OnLeftClick(event : ViewportMouseEvent) {   
    if (event.HitObject != null) {
      var button = event.HitObject;
      if (this.Owner.MenuNavigator.CurrentState == MenuStates.SelectMode) {
        
        if (button == this.Owner.MenuNavigator.Button1.Cog) {
          this.Space.LoadLevel(this.Owner.MenuNavigator.GameLevel1);
        } else if (button == this.Owner.MenuNavigator.Button2.Cog) {
          //this.GameSession.GlobalVariables.IsTutorial = true;
          this.Space.LoadLevel(this.Owner.MenuNavigator.GameLevel1);
        } else if (button == this.Owner.MenuNavigator.Button3.Cog) {
          this.Owner.MenuNavigator.SetMainMenu(false);
        }
        
      } else if (this.Owner.MenuNavigator.CurrentState == MenuStates.ControlType) {
        
        if (button == this.Owner.MenuNavigator.Button1.Cog) {
          this.GameSession.GlobalVariables.ControlType = ControlTypes.Mouse;
        } else if (button == this.Owner.MenuNavigator.Button2.Cog) {
          this.GameSession.GlobalVariables.ControlType = ControlTypes.GamePad;
        } else if (button == this.Owner.MenuNavigator.Button3.Cog) {
          this.Owner.MenuNavigator.SetOptionsMenu();
        }
        
      } else if (this.Owner.MenuNavigator.CurrentState == MenuStates.Options) {
        
        if (button == this.Owner.MenuNavigator.Button1.Cog) {
          this.Owner.MenuNavigator.SetControlTypeMenu();
        } else if (button == this.Owner.MenuNavigator.Button2.Cog) {
          // We'll figure it out
        } else if (button == this.Owner.MenuNavigator.Button3.Cog) {
          this.Owner.MenuNavigator.SetMainMenu(false);
        }
        
      } else if (this.Owner.MenuNavigator.CurrentState == MenuStates.MainMenu) {
        
        if (button == this.Owner.MenuNavigator.Button1.Cog) {
          this.Owner.MenuNavigator.SetModeMenu();
          this.Owner.MenuNavigator.PurgeButton(this.Owner.MenuNavigator.OptionsButtonCog);
          this.Owner.MenuNavigator.MoveButton(this.Owner.MenuNavigator.Button2.Cog, Real3(0, -1.75, 1));
        } else if (button == this.Owner.MenuNavigator.Button2.Cog) {
          this.Space.LoadLevel(this.Owner.MenuNavigator.InstructionsLevel);
        } else if (button == this.Owner.MenuNavigator.Button3.Cog) {
          this.GameSession.RequestQuit();
        } else if (button == this.Owner.MenuNavigator.OptionsButtonCog) {
          this.Owner.MenuNavigator.SetOptionsMenu();
          this.Owner.MenuNavigator.PurgeButton(this.Owner.MenuNavigator.OptionsButtonCog);
          this.Owner.MenuNavigator.MoveButton(this.Owner.MenuNavigator.Button2.Cog, Real3(0, -1.75, 1));
        }
        
      }
    }
  }
}