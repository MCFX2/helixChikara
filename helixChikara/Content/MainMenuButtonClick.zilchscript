class MainMenuButtonClick : ZilchComponent {
  
  [Property] var BGM : CogPath;
  
  var Button : Cog;
  var Controller : Gamepad;
  var CurrentlySelected : Cog;
  var CurrentFrame = 0;
  
  var Deadzone : Real = 0.1;
  var DoneControllerAction : Boolean = false;
  var ControllerInput : Boolean = false;
  var DestroyCredits : Boolean = false;
  
  function Initialize(init : CogInitializer) {
    Zero.Connect(this.Space, Events.LeftClick, this.OnLeftClick);
    Zero.Connect(this.Space, Events.MouseMove, this.OnMouseMove);
    Zero.Connect(this.Space, Events.GamepadUpdated, this.OnGamepadUpdate);
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    Zero.Connect(this.Controller, Events.ButtonDown, this.OnButtonDown);
    Zero.Connect(this.Controller, Events.ButtonUp, this.OnButtonUp);
    this.Controller = Zero.Gamepads.GetGamePad(0);
    Console.WriteLine(this.Controller);
  }
  
  function ToggleSelectedMenu(up : Boolean) {
    var prevSelected = this.CurrentlySelected;
    var buttons : Array[Cog] = this.Owner.MenuNavigator.Buttons;
    var index : Integer = buttons.FindFirstIndex(this.CurrentlySelected);
    if (up) {
      if (index-2<0) {
        if (buttons.LastIndex == 7) index = 6;
        else index = 4;
      } else index-=2;
    } else {
      if (index+2>buttons.LastIndex) index=0;
      else index+=2;
    }
    this.CurrentlySelected = buttons[index];
    prevSelected.Sprite.SpriteSource = SpriteSource.Button_reg_2;
    this.CurrentlySelected.Sprite.SpriteSource = SpriteSource.Button_hover_2;
  }
    
  
  function OnLeftClick(event : ViewportMouseEvent) {   
    if (event.HitObject != null) {
      this.Button = event.HitObject;
    }
  }
  
  function OnButtonDown(event : GamepadEvent) {
    if(event.Button == Buttons.A) {
      this.Button = this.CurrentlySelected;
      this.Button.Sprite.SpriteSource = SpriteSource.Button_click_1;
    } else if (event.Button == Buttons.B) {
      this.Button = this.Owner.MenuNavigator.Buttons[4];
      this.Button.Sprite.SpriteSource = SpriteSource.Button_click_1;
    }
  }
  
  function OnButtonUp(event : GamepadEvent) {
    if(event.Button == Buttons.A || event.Button == Buttons.B) {
      this.Space.GameSession.GlobalVariables.ButtonClick = true;
      this.Button.Sprite.SpriteSource = SpriteSource.Button_hover_2;
    }
  }
  
  function OnMouseMove(event : ViewportMouseEvent) {
    if (this.ControllerInput) {
      this.ControllerInput = false;
      Zero.Mouse.Cursor = Cursor.Arrow;
    }
  }
  
  function OnGamepadUpdate(event : GamepadEvent) {
    if (!this.ControllerInput) {
      this.ControllerInput = true;
      Zero.Mouse.Cursor = Cursor.Invisible;
      this.CurrentlySelected = this.Owner.MenuNavigator.Buttons[0];
      this.CurrentlySelected.Sprite.SpriteSource = SpriteSource.Button_hover_2;
    } else {
      var leftStick = this.Controller.LeftStick;
      if (!this.DoneControllerAction) {
        if (Math.Length(leftStick) > this.Deadzone) {
          if (this.GameSession.GlobalVariables.GetAngle(leftStick) > (Math.Pi/4) &&
              this.GameSession.GlobalVariables.GetAngle(leftStick) < (3*Math.Pi/4)) {
            this.ToggleSelectedMenu(true);
            this.DoneControllerAction = true;
          } else if (this.GameSession.GlobalVariables.GetAngle(leftStick) > (5*Math.Pi/4) &&
                     this.GameSession.GlobalVariables.GetAngle(leftStick) < (7*Math.Pi/4)) {
            this.ToggleSelectedMenu(false);       
            this.DoneControllerAction = true;        
          }
        }
      }
    }
  }
  
  function OnLogicUpdate(event : UpdateEvent) {
    if (this.Space.GameSession.GlobalVariables.ButtonClick) {
      this.Space.GameSession.GlobalVariables.ButtonClick = false;
      if (this.GameSession.GlobalVariables.CurrentMenuState == MenuStates.SelectMode) {
        if (this.Button == this.Owner.MenuNavigator.Buttons[0]) {
          this.Space.Destroy();
          Zero.Mouse.Cursor = Cursor.Arrow;
          this.GameSession.GlobalVariables.CreditsSpace.LoadLevel(this.Owner.MenuNavigator.GameLevel1);
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[2]) {
          this.Space.Destroy();
          this.GameSession.GlobalVariables.DoTutorial = true;
          Zero.Mouse.Cursor = Cursor.Arrow;
          this.GameSession.GlobalVariables.CreditsSpace.LoadLevel(this.Owner.MenuNavigator.GameLevel1);
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[4]) {
          this.Owner.MenuNavigator.SetMainMenu(false);
        }
        
      } else if (this.GameSession.GlobalVariables.CurrentMenuState == MenuStates.ControlType) {
        
        if (this.Button == this.Owner.MenuNavigator.Buttons[0]) {
          this.GameSession.GlobalVariables.ControlType = ControlTypes.Mouse;
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[2]) {
          this.GameSession.GlobalVariables.ControlType = ControlTypes.GamePad;
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[4]) {
          this.Owner.MenuNavigator.SetOptionsMenu(false);
        }
        
      } else if (this.GameSession.GlobalVariables.CurrentMenuState == MenuStates.Options) {
        
        if (this.Button == this.Owner.MenuNavigator.Buttons[0]) {
          this.Owner.MenuNavigator.SetControlTypeMenu();
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[2]) {
          // We'll figure it out
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[4]) {
          this.Owner.MenuNavigator.SetMainMenu(false);
        }
        
      } else if (this.GameSession.GlobalVariables.CurrentMenuState == MenuStates.MainMenu) {
        this.GameSession.GlobalVariables.CreditsSpace = this.GameSession.CreateSpace(Archetype.Space);
        if (this.Button == this.Owner.MenuNavigator.Buttons[0]) {
          this.Owner.MenuNavigator.SetModeMenu();
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[2]) {
          this.Owner.MenuNavigator.SetOptionsMenu(true);
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[4]) {
          this.GameSession.RequestQuit();
        } else if (this.Button == this.Owner.MenuNavigator.Buttons[6]) {
          //this.Space.GameSession.GlobalVariables.CreditsSpace = this.NewLevelSpace;
          this.GameSession.GlobalVariables.CreditsSpace.LoadLevel(this.Owner.MenuNavigator.CreditsLevel);
          this.GameSession.GlobalVariables.CurrentMenuState = MenuStates.Inactive;
        } 
      }
      if (this.GameSession.GlobalVariables.BackToMain) {
          this.GameSession.GlobalVariables.CurrentMenuState = MenuStates.MainMenu;
          this.GameSession.GlobalVariables.BackToMain = false;
      }
    }
    if (this.DoneControllerAction) {
      ++this.CurrentFrame;
      if (this.CurrentFrame>=15) {
        this.CurrentFrame=0;
        this.DoneControllerAction = false;
      }
    }
  }
  
}